#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 10

int stack[MAX];
int top;

void init_stack(void)
{
    top = -1;
}

int push(int t)
{
    if (top >= MAX - 1) {
        printf("Stack overflow !!!\n");
        return -1;
    }
    stack[++top] = t;
    return t;
}

int pop()
{
    if (top < 0) {
        printf("Stack underflow!!!\n");
        return -1;
    }
    return stack[top--];
}

void postfix(char* dst, char* src)
{
    char c;
    init_stack();
    while (*src) {
        if (*src == ')') {
            *dst++ = pop();  // Pop operator
            *dst++ = ' ';
            src++;
        }
        else if (*src == '+' || *src == '-' || *src == '*' || *src == '/') {
            push(*src);  // [1] 연산자를 스택에 push
            src++;
        }
        else if (*src >= '0' && *src <= '9') {
            do {
                *dst++ = *src++;  // [2] 숫자를 그대로 출력
            } while (*src >= '0' && *src <= '9');
            *dst++ = ' ';
        }
        else if (*src == '(') {
            src++; // [3] 괄호는 무시하고 계속 진행
        }
        else {
            src++;  // 공백이나 기타 문자 무시
        }
    }
    *dst = 0;
}

int main() {
    char exp[256];
    char src[256] = "(1+(2*3))";
    postfix(exp, src);
    printf("Postfix representation: %s\n", exp);
    return 0;
}
