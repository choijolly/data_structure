#include <stdio.h>
#include <stdlib.h>

typedef struct _node {
    int key;
    struct _node* next;
} node;

node* head, * tail;

void init_list() {
    head = (node*)calloc(1, sizeof(node));
    tail = (node*)calloc(1, sizeof(node));
    if (!head || !tail) {
        printf("Memory allocation failed!\n");
        exit(1);
    }
    head->next = tail;
    tail->next = NULL;  // tail의 next를 NULL로 설정하여 리스트 끝을 명확히 함
}

node* ordered_insert(int k) {
    node *p = head, *s = head->next, *r;
    
    while (s != tail && s->key <= k) { // `s != tail` 조건을 먼저 확인
        p = s;
        s = s->next;
    }
    
    r = (node*)calloc(1, sizeof(node));
    if (!r) {
        printf("Memory allocation failed!\n");
        exit(1);
    }
    
    r->key = k;
    p->next = r;
    r->next = s;
    
    return r;
}

void print_list() {
    node* t = head->next;
    while (t != tail) {
        printf("%-8d", t->key);
        t = t->next;
    }
    printf("\n");
}

void free_list() {
    node* t = head;
    while (t) {
        node* temp = t;
        t = t->next;
        free(temp);
    }
}

int main() {
    init_list();
    
    ordered_insert(9);
    ordered_insert(3);
    ordered_insert(5);
    ordered_insert(1);
    ordered_insert(7);
    
    print_list();
    
    free_list();
    
    return 0;
}
