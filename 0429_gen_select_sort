#include <stdio.h>
#include <stdlib.h>
#include <windows.h>  
#include <string.h>

#define SIZE 10

void gen_select_sort(void* base, size_t nelem, size_t width,
    int (*fcmp)(const void*, const void*))
{
    void* min;
    int min_idx;
    int x, y;
    min = malloc(width);
   

    for (y = 0; y < nelem - 1; y++)
    {
        min_idx = y;
        memcpy(min, (char*)base + y * width, width);

        for (x = y + 1; x < nelem; x++)
        {
            if (fcmp(min, (char*)base + x * width) > 0)
            {
                memcpy(min, (char*)base + x * width, width);
                min_idx = x;
            }
        }


        memcpy((char*)base + min_idx * width, (char*)base + y * width, width);
        memcpy((char*)base + y * width, min, width);

    }
    free(min);
}

int intcmp(const void* a, const void* b)
{
    return (*(int*)a) - (*(int*)b);
}


int main(void) {
    int number[SIZE] = { 9,8,7,6,5,4,3,2,1,0 };

    gen_select_sort(number, SIZE, sizeof(int), intcmp);

    for (int i = 0; i < SIZE; i++) {
        printf("%d ", number[i]);
    }
    printf("\n");

    return 0;
}
